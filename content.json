{"meta":{"title":"Hexo","subtitle":"xiaxue","description":"Progress is the activity of today and the assurance of tomorrow","author":"Jinhai Zhou","url":"http://yoursite.com"},"pages":[{"title":"categories","date":"2017-06-26T07:29:20.000Z","updated":"2017-06-26T07:32:22.444Z","comments":true,"path":"categories/index.html","permalink":"http://yoursite.com/categories/index.html","excerpt":"","text":"","raw":null,"content":null},{"title":"tags","date":"2017-06-26T07:29:34.000Z","updated":"2017-06-26T07:32:22.491Z","comments":true,"path":"tags/index.html","permalink":"http://yoursite.com/tags/index.html","excerpt":"","text":"","raw":null,"content":null}],"posts":[{"title":"Hexo部属","slug":"部属","date":"2017-05-10T02:16:41.000Z","updated":"2017-05-11T02:05:32.646Z","comments":true,"path":"2017/05/10/部属/","link":"","permalink":"http://yoursite.com/2017/05/10/部属/","excerpt":"Github Pages设置什么是Github PagesGitHub Pages 本用于介绍托管在GitHub的项目，不过，由于他的空间免费稳定，用来做搭建一个博客再好不过了。\n每个帐号只能有一个仓库来存放个人主页，而且仓库的名字必须是username/username.github.io，这是特殊的命名约定。你可以通过http://username.github.io  来访问你的个人主页。\n这里特别提醒一下，需要注意的个人主页的网站内容是在master分支下的。","text":"Github Pages设置什么是Github PagesGitHub Pages 本用于介绍托管在GitHub的项目，不过，由于他的空间免费稳定，用来做搭建一个博客再好不过了。 每个帐号只能有一个仓库来存放个人主页，而且仓库的名字必须是username/username.github.io，这是特殊的命名约定。你可以通过http://username.github.io 来访问你的个人主页。 这里特别提醒一下，需要注意的个人主页的网站内容是在master分支下的。 创建自己的Github Pages注册GitHub及使用Github Pages的过程已经有很多文章讲过，在此不再详述，可以参考： 一步步在GitHub上创建博客主页 全系列 如何搭建一个独立博客——简明Github Pages与Hexo教程 在这里我创建了一个github repo叫做 jiji262.github.io. 创建完成之后，需要有一次提交(git commit)操作，然后就可以通过链接http://jiji262.github.io/ 访问了。（现在还没有内容，别着急） 部署Hexo到Github Pages这一步恐怕是最关键的一步了，让我们把在本地web环境下预览到的博客部署到github上，然后就可以直接通过http://jiji262.github.io/ 访问了。不过很多教程文章对这个步骤语焉不详，这里着重说下。 首先需要明白所谓部署到github的原理。 1.之前步骤中在Github上创建的那个特别的repo（jiji262.github.io）一个最大的特点就是其master中的html静态文件，可以通过链接http://jiji262.github.io 来直接访问。2.Hexo -g 会生成一个静态网站（第一次会生成一个public目录），这个静态文件可以直接访问。3.需要将hexo生成的静态网站，提交(git commit)到github上。 明白了原理，怎么做自然就清晰了。 使用hexo deploy部署hexo deploy可以部署到很多平台，具体可以参考这个链接. 如果部署到github，需要在配置文件_config.xml中作如下修改： 1234deploy: type: git repo: git@github.com:jiji262/jiji262.github.io.git branch: master 然后在命令行中执行 1hexo d 即可完成部署。 踩坑提醒1）注意需要提前安装一个扩展： 1$ npm install hexo-deployer-git --save 2）如果出现下面这样的错误， 1234Permission denied (publickey).fatal: Could not read from remote repository.Please make sure you have the correct access rightsand the repository exists. 则是因为没有设置好public key所致。在本机生成public key(参考github帮助)： 1＃ssh-keygen -t rsa -b 4096 -C \"xxx@xxx.com\" 然后在#user_id/.ssh目录下会生成两个文件，id_rsa.pub和id_rsa.然后登陆github，在SSH设置页面添加上刚才的public key文件也就是id_rsa.pub的内容即可。 使用git命令行部署（optional）不幸的是，上述命令虽然简单方便，但是偶尔会有莫名其妙的问题出现，因此，我们也可以追本溯源，使用git命令来完成部署的工作。 clone github repo12$ cd d:/hexo/blog$ git clone https://github.com/jiji262/jiji262.github.io.git .deploy/jiji262.github.io 将我们之前创建的repo克隆到本地，新建一个目录叫做.deploy用于存放克隆的代码。 创建一个deploy脚本文件123456hexo generatecp -R public/* .deploy/jiji262.github.iocd .deploy/jiji262.github.iogit add .git commit -m “update”git push origin master 简单解释一下，hexo generate生成public文件夹下的新内容，然后将其拷贝至jiji262.github.io的git目录下，然后使用git commit命令提交代码到jiji262.github.io这个repo的master branch上。 需要部署的时候，执行这段脚本就可以了（比如可以将其保存为deploy.sh）。执行过程中可能需要让你输入Github账户的用户名及密码，按照提示操作即可。","raw":null,"content":null,"categories":[{"name":"Hexo","slug":"Hexo","permalink":"http://yoursite.com/categories/Hexo/"}],"tags":[{"name":"Hexo","slug":"Hexo","permalink":"http://yoursite.com/tags/Hexo/"}]},{"title":"Hexo主题配置","slug":"主题配置","date":"2017-04-25T07:24:31.000Z","updated":"2017-05-11T02:05:07.655Z","comments":true,"path":"2017/04/25/主题配置/","link":"","permalink":"http://yoursite.com/2017/04/25/主题配置/","excerpt":"Hexo主题设置这里以主题yilia为例进行说明。\n安装主题12$ hexo clean$ git clone https://github.com/litten/hexo-theme-yilia.git themes/yilia\n启用主题","text":"Hexo主题设置这里以主题yilia为例进行说明。 安装主题12$ hexo clean$ git clone https://github.com/litten/hexo-theme-yilia.git themes/yilia 启用主题 修改Hexo目录下的_config.yml配置文件中的theme属性，将其设置为yilia。 更新主题1234$ cd themes/yilia$ git pull$ hexo g # 生成$ hexo s # 启动本地web服务器 现在打开http://localhost:4000/ ，会看到我们已经应用了一个新的主题。 Hexo 主题配置每个不同的主题会需要不同的配置，主题配置文件在主题目录下的_config.yml。以我们使用的yilia主题为例，其提供如下的配置项（theme\\yilia_config.yml）： 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849# Headermenu: 主页: / 所有文章: /archives # 随笔: /tags/随笔# SubNavsubnav: github: \"#\" weibo: \"#\" rss: \"#\" zhihu: \"#\" #douban: \"#\" #mail: \"#\" #facebook: \"#\" #google: \"#\" #twitter: \"#\" #linkedin: \"#\"rss: /atom.xml# Contentexcerpt_link: morefancybox: truemathjax: true# Miscellaneousgoogle_analytics: ''favicon: /favicon.png#你的头像urlavatar: \"\"#是否开启分享share: true#是否开启多说评论，填写你在多说申请的项目名称 duoshuo: duoshuo-key#若使用disqus，请在博客config文件中填写disqus_shortname，并关闭多说评论duoshuo: true#是否开启云标签tagcloud: true#是否开启友情链接#不开启——#friends: false#是否开启“关于我”。#不开启——#aboutme: false#开启——aboutme: 我是谁，我从哪里来，我到哪里去？我就是我，是颜色不一样的吃货…","raw":null,"content":null,"categories":[{"name":"Css","slug":"Css","permalink":"http://yoursite.com/categories/Css/"}],"tags":[{"name":"Css","slug":"Css","permalink":"http://yoursite.com/tags/Css/"}]},{"title":"Hexo系统环境配置","slug":"系统环境配置","date":"2017-04-25T01:54:35.000Z","updated":"2017-05-11T02:04:46.317Z","comments":true,"path":"2017/04/25/系统环境配置/","link":"","permalink":"http://yoursite.com/2017/04/25/系统环境配置/","excerpt":"系统环境配置要使用Hexo，需要在你的系统中支持Nodejs以及Git，如果还没有，那就开始安装吧！\n安装Node.js下载Node.js参考地址：安装Node.js\n安装Git下载地址：http://git-scm.com/download/","text":"系统环境配置要使用Hexo，需要在你的系统中支持Nodejs以及Git，如果还没有，那就开始安装吧！ 安装Node.js下载Node.js参考地址：安装Node.js 安装Git下载地址：http://git-scm.com/download/ 安装Hexo1234567$ cd d:/hexo$ npm install hexo-cli -g$ hexo init blog$ cd blog$ npm install$ hexo g # 或者hexo generate$ hexo s # 或者hexo server，可以在http://localhost:4000/ 查看 这里有必要提下Hexo常用的几个命令： 1.hexo generate (hexo g) 生成静态文件，会在当前目录下生成一个新的叫做public的文件夹2.hexo server (hexo s) 启动本地web服务，用于博客的预览3.hexo deploy (hexo d) 部署播客到远端（比如github, heroku等平台） 另外还有其他几个常用命令： 12$ hexo new \"postName\" #新建文章$ hexo new page \"pageName\" #新建页面 常用简写 1234$ hexo n == hexo new$ hexo g == hexo generate$ hexo s == hexo server$ hexo d == hexo deploy 常用组合 12$ hexo d -g #生成部署$ hexo s -g #生成预览 现在我们打开http://localhost:4000/ 已经可以看到一篇内置的blog了。 Hexo的配置 目录和文件1、 scaffolds ：模板文件夹，新建文章时，Hexo 会根据 scaffold 来建立文件。Hexo 有三种默认布局： post 、 page 和 draft ，它们分别对应不同的路径。新建文件的默认布局是 post ，可以在配置文件中更改布局。用 draft 布局生成的文件会被保存到 source/_drafts 文件夹。 2、 source ：资源文件夹是存放用户资源的地方。 3、 source/_post ：文件箱。（低版本的hexo还会存在一个 _draft ，这是草稿箱）除 posts 文件夹之外，开头命名为 (下划线)的文件/ 文件夹和隐藏的文件将会被忽略。Markdown 和 HTML 文件会被解析并放到 public 文件夹，而其他文件会被拷贝过去 4、 themes ：主题 文件夹。Hexo 会根据主题来生成静态页面。 5、 themes/landscape ：默认的皮肤文件夹 6、 _config.yml ：全局的配置文件，每次更改要重启服务。 低版本的Hexo还会生成scripts文件夹，里面用于保存扩展Hexo的脚本文件。 全局配置可以在 _config.yml 中修改： 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162# Hexo Configuration## Docs: http://hexo.io/docs/configuration.html## Source: https://github.com/hexojs/hexo/# Site 站点配置title: Hexo-demo #网站标题subtitle: hexo is simple and easy to study #网站副标题description: this is hexo-demo #网栈描述author: pomy #你的名字language: zh-CN #网站使用的语言timezone: Asia/Shanghai #网站时区# URL #可以不用配置## If your site is put in a subdirectory, set url as 'http://yoursite.com/child' and root as '/child/'url: http://yoursite.com #网址，搜索时会在搜索引擎中显示root: / #网站根目录permalink: :year/:month/:day/:title/ #永久链接格式permalink_defaults: #永久链接中各部分的默认值# Directory 目录配置source_dir: source #资源文件夹，这个文件夹用来存放内容public_dir: public #公共文件夹，这个文件夹用于存放生成的站点文件tag_dir: tags #标签文件夹archive_dir: archives #归档文件夹category_dir: categories #分类文件夹code_dir: downloads/code #Include code 文件夹i18n_dir: :lang #国际化文件夹skip_render: #跳过指定文件的渲染，您可使用 glob 来配置路径# Writing 写作配置new_post_name: :title.md # 新文章的文件名称default_layout: post #默认布局titlecase: false # Transform title into titlecaseexternal_link: true # Open external links in new tabfilename_case: 0 #把文件名称转换为 (1) 小写或 (2) 大写render_drafts: false #显示草稿post_asset_folder: false #是否启动资源文件夹relative_link: false #把链接改为与根目录的相对位址future: truehighlight: #代码块的设置enable: trueline_number: trueauto_detect: truetab_replace:# Category &amp; Tag 分类 &amp; 标签default_category: uncategorized #默认分类category_map: #分类别名tag_map: #标签别名# Date / Time format 时间和日期## Hexo uses Moment.js to parse and display date## You can customize the date format as defined in## http://momentjs.com/docs/#/displaying/format/date_format: YYYY-MM-DDtime_format: HH:mm:ss# Pagination 分页## Set per_page to 0 to disable paginationper_page: 10 #每页显示的文章量 (0 = 关闭分页功能)pagination_dir: page #分页目录# Extensions 扩展## Plugins: http://hexo.io/plugins/ 插件## Themes: http://hexo.io/themes/ 主题theme: landscape #当前主题名称# Deployment #部署到github## Docs: http://hexo.io/docs/deployment.htmldeploy:type: 修改全局配置时，注意缩进，同时注意冒号后面要有一个空格。","raw":null,"content":null,"categories":[{"name":"Hexo","slug":"Hexo","permalink":"http://yoursite.com/categories/Hexo/"}],"tags":[{"name":"Hexo","slug":"Hexo","permalink":"http://yoursite.com/tags/Hexo/"}]},{"title":"Hello World","slug":"hello-world","date":"2017-04-23T16:00:00.000Z","updated":"2017-06-26T02:57:31.546Z","comments":true,"path":"2017/04/24/hello-world/","link":"","permalink":"http://yoursite.com/2017/04/24/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","raw":null,"content":null,"categories":[],"tags":[]}]}